// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        glide_version = '4.14.2'
        retrofit_version = "2.9.0"
        kotlin_version = '1.8.0'
        wire_version = '4.4.3'
        hilt_version = '2.44.2'
        booster_version = '4.15.0'
        debug = gradle.startParameter.taskNames.any {
            it.contains('debug') || it.contains('Debug')
        }
    }
    repositories {
        google()
        gradlePluginPortal()
        maven { url "https://maven.aliyun.com/repository/public" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "com.squareup.wire:wire-gradle-plugin:$wire_version"
        classpath "com.didiglobal.booster:booster-gradle-plugin:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-webview:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-shared-preferences:$booster_version"
        if (!debug) {
            classpath "com.didiglobal.booster:booster-transform-activity-thread:$booster_version"
//            classpath "com.didiglobal.booster:booster-transform-finalizer-watchdog-daemon:$booster_version"
//            classpath "com.didiglobal.booster:booster-transform-res-check:$booster_version"
//            classpath "com.didiglobal.booster:booster-transform-toast:$booster_version"
            classpath "com.didiglobal.booster:booster-task-compression-processed-res:$booster_version"
            classpath "com.didiglobal.booster:booster-transform-r-inline:$booster_version"
        }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}